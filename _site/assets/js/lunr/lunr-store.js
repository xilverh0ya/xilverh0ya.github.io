var store = [{
        "title": "[Git test]",
        "excerpt":"    Test 2   for git   $git commit -m \"Initial Commit\"  ","categories": ["Git & Github"],
        "tags": ["minimal mistakes","jekyll","blog","favicon","disqus","google analytics"],
        "url": "http://localhost:4000/git%20&%20github/gitTestPost/",
        "teaser": null
      },{
        "title": "[Markdown Basic Sytax]",
        "excerpt":"    GitHub에서 README 파일을 작성할 때나, 블로그에 포스팅을 하거나, 간단한 문서를 만들 때 가볍게 사용하는 문서작성 용도로 자주 사용된다. 그래서 오늘은 이 마크다운 언어에 대해서 알아보려고 한다.   0. 마크다운이란?             일반 텍스트 기반의 경량 마크업 언어   일반 텍스트로 서식이 있는 문서를 작성하는데 사용   일반 마크업 언어에 비해 문법이 쉽고 간단   HTML, 리치텍스트(RTF)등 서식 문서로 변환이 용이            응용 소프트웨어와 함께 배포되는 README 파일이나 온라인 게시물 등에 쓰임           0-1. 마크다운 에디터      마크다운 에디터는 메모장이나 아무 에디터를 사용해도 무방   단, 미리보기 기능에 따라 사용성에서 큰 차이   따라서 미리보기 기능을 제공하는 에디터 사용 추천(대부분의 IDE에서 (기본 or 확장기능으로) 제공하고 있기는 함.)            ex) VS Code       미리보기 웹사이트(Make a README)           1. 문법(Syntax)      제목 : title            #을 1~6개 사용하여 크기 조절(&lt;H1&gt; ~ &lt;H6&gt; 지원)       HR(Horizontal Rule, 수평선 구분자)와 결합해서 사용 가능           # 제목1 - H1 ## 제목2 - H2 ### 제목3 - H3 #### 제목4 - H4 ##### 제목5 = H5 ###### 제목6 - H6  // HR(Horizontal Rule, 수평선) 구분자와 결합해서 사용 제목 텍스트 1 ___           제목1 - H1      제목2 - H2      제목3 - H3      제목4 - H4      제목5 = H5      제목6 - H6             제목 텍스트 1            줄바꿈 : Line Breaks            마크다운 문법에서 엔터를 써도 개행이 되지 않음                    엔터키 2번 : 단락 구분                       ’  ‘ : 공백 2번 입력 -&gt; 줄바꿈(개행                                                                                         : Tag로도 가능                                                   // 공백 2개 입력 X 안녕하세요. 이은호, 개발자입니다.  // 공백 2개 입력 안녕하세요.   이은호, 개발자입니다.  // &lt;br&gt;태그 안녕하세요.&lt;br&gt; 이은호, 개발자입니다.           안녕하세요. 이은호, 개발자입니다.       안녕하세요.  이은호, 개발자입니다.       안녕하세요.  이은호, 개발자입니다.       인용문 : BlockQuote            블럭인용문자(‘&gt;’) 사용           &gt; 첫번째 블록 &gt;&gt; 두번째 블록 &gt;&gt;&gt; 세번째 블록                  첫번째 블록                 두번째 블록                     세번쨰 블록                                     블록 안에 다른 마크다운 요소를 넣을 수 있음           &gt; 첫번째 블록 &gt; 1. 두번쨰 블록 &gt; + 세번째 블록                  첫번째 블록                 두번쨰 블록                        세번째 블록                                        목록 : List            순서있는 목록 : 숫자와 마침표 사용           // 1. 2. 3. 이런식으로 해도 되지만, 순서대로 번호를 매겨서 표시됨. 1. 첫번째 아이템   1. 하위 아이템   4. 하위 아이템 1. 두번째 아이템 2. 세번쨰 아이템                  첫번째 아이템       하위 아이템       하위 아이템       두번째 아이템       세번쨰 아이템                  순서없는 목록 : (*, - , +) 사용, 혼합가능           + 첫번째 아이템   - 1-1 아이템   - 1-2 아이템   - 1-3 아이템 + 두번쨰 아이템   * 2-1 아이템   * 2-2 아이템 + 세번쨰 아이템   + 3-1 아이템     + 3-1-1 아이템   + 3-2 아이템                  첫번째 아이템                    1-1 아이템           1-2 아이템           1-3 아이템                       두번쨰 아이템                    2-1 아이템           2-2 아이템                       세번쨰 아이템                    3-1 아이템                            3-1-1 아이템                                   3-2 아이템                                   강조(글씨 꾸미기) : Emphasis            볼드, 이텔릭, 밑줄, 취소선 등 이용가능           *single asterisks 이텔릭체* _single underscores 이텔릭체_ **double asterisks 볼드체** __double underscores 볼드체__ ***tripple underscores 볼드+이텔릭체*** ___tripple underscores 볼드+이텔릭체___ ~~cancelline 취소선~~ **~~bold cancelline 볼드+취소선~~** &lt;u&gt;underline - 밑줄&lt;/u&gt;           single asterisks 이텔릭체  single underscores 이텔릭체  double asterisks 볼드체  double underscores 볼드체  tripple underscores 볼드+이텔릭체  tripple underscores 볼드+이텔릭체  cancelline 취소선  bold cancelline 볼드+취소선  underline - 밑줄               구분선 : Contour            수평선(Horizontal Rule) 사용법           구분선1 - - - // --- : 제목 문법과 중복되므로 주의!  구분선1-1 ---  구분선1-2 ------------------------------  구분선2 ***  구분선2-1 * * *  구분선2-2 ************************************  구분선3 ___           구분선1            구분선1-1       구분선1-2               구분선2 ***       구분선2-1            구분선2-2  *****               구분선3  ___               코드 : Code            인라인(inline) 코드 &lt;img&gt; 태그를 사용하면 본문에 이미지를 삽입할 수 있습니다.       블록(block) 코드                ```bash     $ git push origin master     ```      ```python     print(\"hello world!\")     ```      ```java     public static void main(String[] args){       System.out.println(\"Hello, world\");     }     ```      $ git push origin master     print(\"hello world!\")     public static void main(String[] args){     System.out.println(\"Hello, world\");   }          표 : Table            본문에 테이블 삽입           |Column1(Left[Default])|Column2(Center)|Column3(Right)| |---|:---:|---:| // 표를 정렬하는 방법 |이은호|개발자|ML/DL| |xilver|Data Scientist|CV, NLP| |제|목표 도메인은|컴퓨터 비젼과 자연어 처리입니다.| |My|target Domain is|CV &amp; NLP|                                      Column1(LeftDefault)           Column2(Center)           Column3(Right)                                           이은호           개발자           ML/DL                             xilver           Data Scientist           CV, NLP                             제           목표 도메인은           컴퓨터 비젼과 자연어 처리입니다.                             My           target Domain is           CV &amp; NLP                                   링크 : Link            문서 작성 시, 특정 사이트를 링크할 때 사용           // [Title](link) : 일반적으로 사용되는 형식 [My GitHub](https://github.com/xilverh0ya)  // &lt;link Address&gt; : 자동 링크 사용 &lt;https://github.com/xilverh0ya&gt;  // [link keyword][id] : 참조 링크 사용 // [id] : URL \"Optional Title here Link : [Github][My Github Link] [My Github Link]: https://github.com/xilverh0ya \"Go to xilve's Github\"           My GitHub       https://github.com/xilverh0ya       Link : [Github][githubLink] [githubLink]: https://github.com/xilverh0ya “Go to xilver’s Github” (이거 왜 안되징…)       이미지 삽입 : Image            본문에 이미지를 삽입       사이즈 조정 및 정렬은 HTML  Tag 사용           ![TEXT](https://imageurl) ![TEXT](./로컬이미지경로.확장자 \"이미지설명\") ![TEXT](data:image/svg+xml;base64,이미지데이터)  // 참조링크를 이용한 이미지 삽입 ![TEXT][ClassE] [ClassE](https://imageurl \"E클래스 이미지\")  // 이미지에 링크 걸기 ![TEXT](https://imageurl, \"이미지설명\")(LinkURL)  // HTML &lt;img&gt; Tag 사용, 크기 및 정렬 가능 &lt;img src=\"https://cdn.eyesmag.com/content/uploads/sliderImages/2021/02/24/the-new-mercedes-benz-c-class-2021-01-fcc19468-f66c-467a-870f-dc1c7aa29e84.jpg\" width=\"200px\"&gt;  &lt;p align=\"center\"&gt;&lt;img src=\"https://www.motorgraph.com/news/photo/202102/27134_86118_4323.jpg\" width=\"400px\"&gt;&lt;/p&gt;                         02. 장단점     장점            문법이 쉽고 직관적       지원 가능한 플랫폼과 프로그램이 다양       다양한 형태로 변환 가능       Text 형식으로 형상관리를 통한 변경이력관리가 용이       별도 도구 없이 편집가능       Text File이라서 용량이 적음           단점            아직까지 표준이 존재 X       Tool/Viewer에 따라 경과물이 다르게 출력           참고 사이트  ","categories": ["Markdown"],
        "tags": ["markdown","syntax"],
        "url": "http://localhost:4000/markdown/aboutMarkDown/",
        "teaser": null
      },{
        "title": "[2022) Jump to Python Study 00. Tutorial]",
        "excerpt":"    0. 교재소개            지은이 : 박응용  출판사 : 이지스퍼블리싱   이 책은 파이썬이란 언어를 처음 접해보는 독자들과 프로그래밍을 한 번도 해 본적이 없는 사람들을 대상으로 한다. 프로그래밍을 할 때 사용되는 전문적인 용어들을 알기 쉽게 풀어서 쓰려고 노력하였으며, 파이썬이란 언어의 개별적인 특성만을 강조하지 않고 프로그래밍 전반에 관한 사항을 파이썬이란 언어를 통해 알 수 있도록 알기 쉽게 설명하였다.   파이썬에 대한 기본적인 지식을 알고 있는 사람이라도 이 책은 파이썬 프로그래밍에 대한 흥미를 가질 수 있는 좋은 안내서가 될 것이다. 이 책의 목표는 독자가 파이썬을 통해 프로그래밍에 대한 전반적인 이해를 갖게하는 것이며, 또 파이썬이라는 도구를 이용하여 원하는 프로그램을 쉽고 재미있게 만들 수 있게 하는 것이다.   “점프 투 파이썬” 이나 파이썬에 대한 질문은 최근 오픈한 파이썬 게시판 서비스인 파이보를 활용해 보자.      파이보 - https://pybo.kr   이 책은 위키독스에도 올라와 있다. ___   1. 파이썬 설치 방법 (윈도우 기준)          파이썬 공식 홈페이지의 다운로드 페이지에서 윈도우용 파이썬 언어 패키지 다운로드                python 3.x로 시작하는 버전 중 가장 최근 버전 다운로드                          다운로드 받은 패키지의 인스톨러를 실행 후, ‘Install Now’ 선택                Add Python 3.x to PATH 반드시 체크                          설치 완료 후 [close]를 클릭해서 종료     파이썬이 정상적으로 설치됐는지 확인하는 법                [시작 -&gt; 명령 프롬프트]                  아래 명령어 입력           $ python                                      버젼과 »&gt; 명령어 입력창이 나타나면 설치 성공                    2.파이썬 둘러보기          설치 확인 CMD 화면에서 기초 실습을 해보자.                사칙연산           &gt;&gt;&gt; 1 + 2 3 &gt;&gt;&gt; 5 - 1 4 &gt;&gt;&gt; 3 / 2.4 1.25 &gt;&gt;&gt; 3 * 9 27                                   곱하기와 나누기는 우리가 일반적으로 알고있는 단어와 다르니 주의하자!             결과 값이 바로바로 나오는데 이는 인터프리터언어의 특징이다.(인터프리터가 무엇인지는 후에 알아보도록 하자.)                             변수에 숫자 대입하고 계산하기           &gt;&gt;&gt; a = 1 &gt;&gt;&gt; b = 2 &gt;&gt;&gt; a + b 3                                   a에 1을, b에 2를 대입한 후, a + b를 실행하면 3이 결과값으로 출력된다.                             변수에 문자 대입하고 출력하기           &gt;&gt;&gt; a = \"Python\" &gt;&gt;&gt; print(a) Python &gt;&gt;&gt; a Python                                   대화형 인터프리터 상태에서는 print함수를 따로 쓰지 않아도 변수 이름만 입력해서 a의 값을 출력할 수 있다.                             대화형 인터프리터 종료하는 방법                        Ctrl + Z -&gt; Enter             Sys 모듈을 사용               &gt;&gt;&gt; import sys &gt;&gt;&gt; sys.exit() $                                                                    3. 파이썬과 에디터          파이썬에서는 기본 에디터인 IDLE를 제공한다.                실행 방법 : [시작 - Python3.x - IDLE]         IDLE에서는 한줄 한줄 실행이 아닌 여러줄을 한꺼번에 (순차적으로) 실행할 수 있다.                 추천 에디터                비주얼 스튜디오 코드(VS Code) : 거의 모든 언어 지원         파이참(PyCharm) : 파이썬 전용 에디터         각 설치 방법 및 활용 방법은 구글링!                    4. 본격적인 시작에 앞서          파이썬이란?                귀도 반 로섬(Guido Van Rossum)이 개발한 인터프리터 언어.         컴퓨터 프로그래밍 교육을 위해 많이 사용하지만, 기업의 실무를 위해서도 많이 사용하는 언어. Ex) 구글                        구글에서 만든 소프트웨어의 50% 이상이 파이썬으로 작성됐다고 한다.                             파이썬 프로그램은 공동 작업과 유지 보수가 매우 쉽고 편하다.                        파이썬의 문법 자체가 사람에게 친화적이라 알아보기 쉽고, 가독성이 매우 좋다. (파이썬 식 프로그래밍을 하라는 말이 있을 정도)                                     파이썬의 특징                파이썬은 ‘인간다운 언어’다.                        사람이 생각하는 방식을 그대로 표현             후에 문법을 배울 수록 느끼게 된다.                                      if 4 in [ 1, 2, 3, 4 ] : print(\"4 in Array\")   만약 4가 [ 1, 2, 3, 4 ] 안에 있다면, '4 in Array'를 출력한다.                           프로그램을 모르더라도 직관적으로 어떤 뜻인지 알 수 있을 정도로 사람 친화적이다.         문법이 쉬워서 빠르게 배울 수 있다.         파이썬은 문법 자체가 아주 쉽고 간결하다.         문법이 사람의 사고 체계와 매우 닮아 있다.                 무료지만 강력함                파이썬은 오픈 소스이기 때문에 당연히 무료         만들고자 하는 프로그램의 대부분을 파이썬으로 만들 수 있음         시스템 프로그래밍이나 하드웨어 제어같은 복잡하고 반복 연산이 많은 프로그램은 파이썬과 어울리지 않음.         하지만 파이썬은 이런 약점을 극복할 수 있게 다른 언어로 만든 프로그램을 파이썬 프로그램에 포함시킬 수 있음.         특히 C와 찰떡궁합         프로그램의 전반적 뼈대는 파이썬으로 제작, 빠른 실행 속도가 필요한 부분은 C로 제작할 수 있음                 간결하다.                파이썬은 가장 좋은 방법 1가지만 사용하는 것을 선호.         다른 사람이 작업한 소스 코드도 한 눈에 들어와 이해하기 쉽기 때문에 공동 작업과 유지 보수에 용이         파이썬은 줄을 잘 맞추는게 강제된다.         다른 언어와 달리 단락을 괄호가 아닌 들여쓰기로 구분하기 때문         파이썬은 줄을 맞추지 않으면 실행되지 않는다.         따라서 개발자의 습관과 상관없이 가독성 좋은 코드가 나와 공동 작업과 유지 보수에 용이한 것이다.         누가 작성하던 쉽게 이해할 수 있다는 뜻                  #simple.py languages = [ 'python', 'perl', 'c', 'java' ]  for lang in languages :     if lang in [ 'python', 'perl' ] :         print(\"%6s need interpreter\" % lang)     elif lang in [ 'c', 'java' ] :         print lang in [ 'c', 'java' ]     else :         print(\"should not reach here\")           파이썬으로 할 수 있는 일                시스템 유틸리티 제작                        시스템 유틸리티? : 컴퓨터 사용에 도움을 주는 여러 소프트웨어                             GUI 프로그래밍                        GUI 프로그래밍을 위한 도구들이 잘 갖춰져있어 GUI 프로그램 개발이 쉽다. Ex) Tkinter(티케이인터)                             C/C++와의 결합                        파이썬은 다른 언어와 잘 어울려 결합해서 사용할 수 있기 때문에 접착(Glue)라고 불림             특히 C/C++과 잘 어울려서 C나 C++로 만든 프로그램을 파이썬에서 사용할 수 있으며, 파이썬 프로그램 역시 C나 C++에서 사용할 수 있다.                             웹 프로그래밍         수치 연산 프로그래밍                        사실 파이썬 자체가 수치 연산에 적합한 프로그램은 아니지만 C로 만들어진 NumPy라는 수치 연산 모듈을 제공하기 때문에 빠른 연산이 가능하다.                             데이터베이스 프로그래밍                        사이베이스(Sybase), 인포믹스(Infomix), 오라클(Oracle), 마이에스큐엘(MySQL), 포스트그레스큐엘(PostgreSQL) 등의 데이터베이스 접근 도구 제공             이 외에도 피클(pickle)이라는 파이썬 모듈 제공                             데이터 분석, 사물 인터넷                        판다스(Pandas) 모듈을 사용하여 데이터 분석에 용이하다.             파이썬을 기반으로하는 라즈베리파이 덕분에 사물 인터넷 분야에서도 활용도가 높다.                                     파이썬으로 할 수 없는 일                시스템과 밀접한 프로그래밍 영역                        운영체제             엄청난 횟수의 반복과 연산이 필요한 프로그램             데이터 압축 알고리즘 개발 프로그램             즉 대단히 빠른 속도를 요구허나 하드웨어를 직접 건드려야 하는 프로그램은 어울리지 않음.                             모바일 프로그래밍                        구글이 파이썬을 애용하지만, 파이썬으로 앱을 개발하기는 아직 어렵다.                                     컴파일 언어 vs 인터프리터 언어                컴파일 언어                        컴파일 언어는 프로그래머가 작성한 코드를 컴퓨터가 읽지 못한다.             그래서 컴파일러를 이용해 컴퓨터 언어로 번역             기계어로 번역한 프로그램을 실행함             바로 컴퓨터 언어로 번역해서 읽는 속도가 빠르다.                             인터프리터 언어                        앍을 때 바로 인터프리터를 거쳐 한줄씩 실행             번역하고 읽고의 과정을 반복하여 빠르지 않게 작동                                                                      인터프리터 언어         컴파일언어                                 작동방식         한 줄씩 번역과 실행         한꺼번에 번역 후 실행                       속도         느리다         빠르다                  이상으로 파이썬을 공부하기 전 튜토리얼을 마친다.  ","categories": ["Python"],
        "tags": ["python","basic","Tutorial"],
        "url": "http://localhost:4000/python/jumpToPython_00_Tutorial/",
        "teaser": null
      },{
        "title": "(작성중04-24이후 업로드 예정)[2022) Jump to Python Study 01. DataType (자료형)]",
        "excerpt":"    0. 들어가기에 앞서          어떤 프로그래밍 언어든 ‘그 언어의 자료형을 알고 이해할 수 있다면 이미 그 언어의 절반을 터득한 것이나 다름없다.’는 말이 있다.     자료형                프로그래밍 할 때 쓰이는 숫자, 문자열 등 자료 형태로 사용하는 모든 것         프로그램의 기본이자 핵심 단위                  1. 숫자형          숫자형이란?                숫자형(Number) : 숫자 형태로 이루어진 자료형                                        항목         파이썬 사용 예                                 정수         123, -345, 0                       실수         123.45, -1234.5, 3.4e10                       8진수         0o34, 0o25                       16진수         0x2A, 0xFF                          숫자형은 어떻게 만들고 사용할까?                정수형(Integer) : 정수를 뜻하는 자료형         실수형(Floating-porint) : 소수접이 포함된 숫자                        컴퓨터식 지수 표현 뱡식               a = 4.24E10   # = 4.24 * (10 ** 10) a = 4.24e~10  # = 4.24 * (10 ** -10)                                                                          8진수(Octal)와 16진수(Hexadecimal)                8진수 : 0o or 0O로 시작         16진수 : 0x로 시작           a = 0o177   # 8진수 b = 0x8ff   # 16진수                                              숫자를 활용하기 위한 연산자                사칙연산                  a = 3 b = 4  print(a + b) print(a - b) print(a * b) print(a / b)    # 얘는 결과값이 자동으로 실수로 변환되어 나옴           기타 유용한 연산자       print(a ** b)   # a의 b 제곱(a의 b승) print(a % b)    # a를 b로 나눈 나머지 print(a // b)   # a를 b로 나눈 몫                  2. 문자열 자료형          문자열(String) : 문자, 단어 등으로 구성된 문자들의 집합     문자열을 만드는 4가지 방법       a = \"Hello world\"   # 큰따옴표(\")로 양쪽 둘러싸기 a = 'Hello world'   # 작은따옴표(')로 양쪽 둘러싸기 # 멀티라인(Multiline) a = \"\"\" Life is too short You need Python \"\"\" a = ''' Life is too short You need Python '''                          문자열 안에 작은/큰따옴표를 넣고 싶다면?       a = \"Python's favorite food is perl\"      #  문장부호의 중복 조심 a = \"Python\\'s favorite food is perl\"     # 이스케이핑 문자 사용 # 다른 이스케이핑 예시 a = \"Life is too short\\nYou need Python\"  # 이스케이핑 + n -&gt; 개행문자                          ※이스케이핑 문자? : 참조              문자열 연산하기      a = \"Python\" b = \" is fun\" print(a + b)  # 문자열 연결 (Python is fun) print(a * 2)  # 문자열 반복 (PythonPython)  # 문자열 연산 응용 print(\"=\" * 50) print(\" \" * 20 + \"Title\") print(\"=\" * 50) # 출력 결과 ==================================================                     Title ==================================================           문자열 길이 구하기 : len()함수 사용       a = \"Life is too short\" print(len(a)) # 출력 결과 17                          문자열 인덱싱 : s[n]                인덱싱(indexing) : ‘가리킨다’의 의미                  a = \"Life is too short, You need Python\" print(a[3]) print(a[-0]) print(a[-1])  # 출력 결과 'e'   # 파이썬은 0부터 숫자를 센다. 'L'   # 0 = -0 'n'   # 음수 인덱싱은 뒤에서 부터(-1 부터) /// 이유는? : 0 = -0           문자열 슬라이싱 : s[Start : End : Step]                슬라이싱(Slicing) : ‘잘라낸다’는 의미                  ","categories": ["Python"],
        "tags": ["python","basic","data type"],
        "url": "http://localhost:4000/python/DataType/",
        "teaser": null
      }]
